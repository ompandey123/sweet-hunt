# Example workload for Docker Desktop getting started guide
apiVersion: v1
kind: Service
metadata:
  name: pizzagateway
  labels:
    run: pizzagateway
spec:
   ports:
   - port: 80
     protocol: TCP
     targetPort: 80
   selector:
     app: pizzagateway

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizzahunt-gateway
spec:
  selector:
    matchLabels:
      app: pizzagateway
  replicas: 1
  template:
    metadata:
      labels:
        app: pizzagateway
    spec:
      containers:
      - name: hello-nginx
        image: nginxdemos/hello
        ports:
        - containerPort: 80
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /alive
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /startup
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

      #   volumeMounts:                # Add this section for volume mount
      #   - name: nginx-config         # Name of the volume
      #     mountPath: /etc/nginx     # Mount path in the container
      #     readOnly: true

      # volumes:                       # Add this section for the volume
      # - name: nginx-config           # Name of the volume
      #   configMap:
      #     name: nginx-config
           
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pizzahunt-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Authorization,Content-Length,Content-Type"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"

    #nginx.ingree.kubernetes.io/rewrite-target: /$1
    #nginx.ingree.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   include /etc/nginx/nginx.conf;
spec:
  rules:
    - host: hello.127.0.0.1.nip.io
    
      http:
        paths:
          - path: /app
            pathType: ImplementationSpecific
            backend:
              service:
                name: hello-nginx
                port:
                  number: 80
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend
                port:
                  number: 5173
          